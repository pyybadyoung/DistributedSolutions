1、缓存穿透：
        概念：缓存和数据库中都没有数据，而用户不断的发送请求，造成数据库压力倍增的情况
        解决方案：接口层增加校验，比如用户鉴权校验，参数做校验 比如：ID做基础校验，id<=0的直接拦截
                  对于像ID为负数的非法请求直接过滤掉，采用布隆过滤器
                  针对在数据库中找不到的记录，我们仍然将该空数据存入缓存，当然一般会设置一个较短的过期时间

2、缓存雪崩：（针对多个key）
        概念：缓存服务器宕机或者大量缓存集中在某个时间段失效，导致请求全部去到数据库，造成数据库压力倍增的情况
        解决方案：实现缓存高可用，通过Redis cluster将热点数据均匀分布在不同的Redis库中也能避免全部失效的问题
                  批量往redis存数据的时候，把每个key的失效时间加一个随机数 setRedis（Key，value，time + Math.random() * 10000）

3、缓存击穿：（针对单个key）
        概念：redis过期后的一瞬间，有大量用户请求同一个缓存数据，导致这些请求逗去请求数据库
        解决方案：设置热点数据永不过期
                  使用互斥锁？？？？



4、疑问：（未完成）
        什么是布隆过滤器？？？
        当热点key不存在时，如何删除对应布隆过滤器中的数据呢（重新初始化布隆过滤器）
        解决缓存击穿的方案使用互斥锁具体是怎么实现的？？？

解答：
    1、什么是布隆过滤器：
        是一个很长的二进制向量和一系列随机映射函数。布隆过滤器可以用于检索一个元素是否存在一个集合中。
        它的有点是空间效率和查询时间比一般的算法要好的多，缺点是有一定的误判率和删除困难
    2、优点：
        时间复杂度低，增加和删除元素的时间复杂度为O(N)，（N为哈希函数的个数）
        保密性强，布隆过滤器不存储元素本身
        存储空间小，如果允许存在一定的误判，布隆过滤器非常的节省空间
    3、缺点
        有一定的误判率，但是可以通过调整参数来降低
        无法获取元素本身
        很难删除元素
